name: Create New Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      # Configure git for Swift Package Manager
      - name: Configure Git Authentication
        run: |
          # Set up git to use the token for authentication with all github.com requests
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
          
          # Verify the configuration
          echo "Git URL configuration:"
          git config --global --get-regexp url.*

      - name: Install dependencies
        run: |
          # Install ldid for signing
          curl -LO https://github.com/ProcursusTeam/ldid/releases/download/v2.1.5-procursus7/ldid_macosx_x86_64
          sudo install -m755 ldid_macosx_x86_64 /usr/local/bin/ldid
          
          # Install additional tools
          brew install 7zip gnu-sed

      - name: Set up Swift environment
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: '5.10.1'
      
      - name: Swift version check
        run: swift --version

      - name: Prepare build environment
        run: | 
          mkdir -p upload

      # Build using the enhanced Makefile with proper dependency resolution
      - name: Build with Makefile
        run: |
          # Print Swift locations to verify environment
          echo "Swift location: $(which swift)"
          echo "xcodebuild location: $(which xcodebuild)"
          
          # Build using the enhanced Makefile
          make clean
          make dependencies
          make build
          make package

      - name: Copy artifacts
        run: |
          # Copy the IPA file to upload directory
          cp packages/*.ipa upload/backdoor.ipa
          
          # Check if file exists and print size
          ls -la upload/
          ls -la packages/

      - name: Get Version Number
        id: get_version
        run: |
          VERSION=$( /usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" Payload/backdoor.app/Info.plist )
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Version detected: $VERSION"

      - name: Setup release files
        run: |
          mv upload/backdoor.ipa upload/backdoor_v${VERSION}.ipa
          cp upload/backdoor_v${VERSION}.ipa upload/backdoor_v${VERSION}.tipa
          ls -la upload/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: backdoor v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          files: |
            upload/*ipa
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}